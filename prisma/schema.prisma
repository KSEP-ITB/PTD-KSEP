generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "cockroachdb"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Widget {
  id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
}

enum crdb_internal_region {
  gcp_asia_southeast1 @map("gcp-asia-southeast1")
}

enum Role {
  USER
  ADMIN
  KAJASEP
}

enum ApplicationStatus {
  APPLIED
  APPROVED
  REJECTED
}


model User {
  id          String              @id @default(uuid())
  username    String              @unique
  role        Role
  password    String
  assignments StudentAssignment[]

  kajasep     Kajasep?            @relation("OwnerRelation")

  acceptedKajasepId String?
  acceptedKajasep   Kajasep?       @relation("AcceptedKajasepRelation", fields: [acceptedKajasepId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([acceptedKajasepId])

  kajasepApplications KajasepApplication? @relation("UserApplications")
}

model StudentAssignment {
  id                   String               @id @default(uuid())
  link                 String
  createdAt            DateTime             @default(now())
  userId               String
  user                 User                 @relation(fields: [userId], references: [id], onDelete: Cascade)
  assignmentId         String
  assignmentForStudent AssignmentForStudent @relation(fields: [assignmentId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([assignmentId])
}

model AssignmentForStudent {
  id              String              @id @default(uuid())
  day             String              
  title           String
  description     String
  dueDate         String
  linkAttach      String?
  studentAssignments StudentAssignment[]
}

model Announcement {
  id      String @id @default(uuid())
  title   String
  content String
}

model Handbook {
  id    String @id @default(uuid())
  day   String  
  title String
  link  String
}

model Kajasep {
  id             String              @id @default(uuid())

  userId         String              @unique
  user           User                @relation("OwnerRelation", fields: [userId], references: [id], onDelete: Cascade)

  name             String?
  nickname         String?
  description      String?
  requirement      String?
  quota            Int?
  imageUrl       String
  totalApplicants Int               @default(0)

  dejaseps       User[]              @relation("AcceptedKajasepRelation")
  applications   KajasepApplication[] @relation("KajasepApplications")
}


model KajasepApplication {
  id           String             @id @default(uuid())

  kajasepId    String
  kajasep      Kajasep            @relation("KajasepApplications", fields: [kajasepId], references: [id], onDelete: NoAction)

  applicantId  String             @unique
  applicant    User               @relation("UserApplications", fields: [applicantId], references: [id], onDelete: NoAction)

  message      String?
  applyStatus  ApplicationStatus  @default(APPLIED)
  createdAt    DateTime           @default(now())
  updatedAt    DateTime           @updatedAt

  @@index([kajasepId])
  @@index([applicantId])
}